<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.takari</groupId>
    <artifactId>takari</artifactId>
    <version>24</version>
    <!-- <version>18</version> -->
  </parent>

  <groupId>io.takari</groupId>
  <artifactId>io.takari.incrementalbuild</artifactId>
  <version>0.20.7-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>incrementalbuild</name>
  <description>Incremental build support library</description>
  <url>https://github.com/takari/io.takari.incrementalbuild</url>
  <licenses>
    <license>
      <name>Eclipse Public License 1.0</name>
      <url>http://www.spdx.org/licenses/EPL-1.0</url>
    </license>
  </licenses>
  <scm>
    <url>https://github.com/takari/io.takari.incrementalbuild</url>
    <connection>scm:git:https://github.com/takari/io.takari.incrementalbuild.git</connection>
    <developerConnection>scm:git:https://github.com/takari/io.takari.incrementalbuild.git</developerConnection>
    <tag>HEAD</tag>
  </scm>
  <developers>
    <developer>
      <name>Jason van Zyl</name>
    </developer>
    <developer>
      <name>Igor Fedorenko</name>
    </developer>
    <developer>
      <name>Jaime Morales</name>
    </developer>
  </developers>

  <properties>
    <apache-maven.version>3.3.9</apache-maven.version>
    <mavenPluginPlugin.version>3.4</mavenPluginPlugin.version>
    <slf4j.version>1.7.5</slf4j.version>
    <junit.version>4.11</junit.version>
    <guava.version>19.0</guava.version>
    <eclipse-sisu.version>0.3.2</eclipse-sisu.version>
    <plugin-testing.version>2.9.2</plugin-testing.version>
    <takari.javaSourceVersion>1.8</takari.javaSourceVersion>
    <takariLifecycleVersion>1.12.1</takariLifecycleVersion>
    <classworlds.version>2.5.2</classworlds.version>
    <takari.transitiveDependencyReference>error</takari.transitiveDependencyReference>
    <takari.privatePackageReference>ignore</takari.privatePackageReference>
    <incrementalbuild-workspace.version>0.20.5</incrementalbuild-workspace.version>
    <takari-builder-security-manager.version>0.20.5</takari-builder-security-manager.version>
    <maven-resolver.version>1.1.0</maven-resolver.version>
    <maven-wagon.version>3.0.0</maven-wagon.version>
  </properties>

  <modules>
    <!--
      | Changes to incrementalbuild-workspace and takari-builder-security-manager require update to
      | io.takari.m2e.lifecycle and should be avoided if possible.
      | To emphasise this, these projects are not normally part
      | of io.takari.incrementalbuild build and special steps are required to produce new builds 
      | and release new versions.
      |
      | To start work on new incrementalbuild-workspace or takari-builder-security-manager version
      | - Uncomment the module below
      | - Update <parent> version in incrementalbuild-workspace/pom.xml or takari-builder-security-manager/pom.xml
      | - Update incrementalbuild-workspace.version or takari-builder-security-manager.version property
      |
      | To release incrementalbuild with new incrementalbuild-workspace or takari-builder-security-manager version
      | - mvn org.eclipse.tycho:tycho-versions-plugin:0.20.0:set-version -DnewVersion=<new-version>
      | - Update incrementalbuild-workspace.version property or takari-builder-security-manager.version
      | - git commit -asm "prepare release io.takari.incrementalbuild-<new-version>"
      | - git tag io.takari.incrementalbuild-<new-version>
      | - mvn clean deploy -Ptakari-release
      | - git-push-tags (when you are ready)
      |
      | To start next incrementalbuild release without new incrementalbuild-workspace or takari-builder-security-manager
      | - Comment out the module below
      | - mvn org.eclipse.tycho:tycho-versions-plugin:0.20.0:set-version -DnewVersion=<next-version>
      | - git commit -asm "prepare for next development iteration"
      |
    
     -->
     
    <!-- <module>incrementalbuild-workspace</module> -->
    <!-- <module>takari-builder-security-manager</module> -->
    
    <module>incrementalbuild</module>
    <module>incrementalbuild-its</module>
    <module>takari-builder</module>
    <module>takari-builder-apt</module>
    <module>takari-builder-demo</module>
    <module>takari-builder-enforcer</module>
    <module>takari-builder-common</module>
  </modules>

   <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven-core</artifactId>
        <version>${apache-maven.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven-plugin-api</artifactId>
        <version>${apache-maven.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.maven.plugin-tools</groupId>
        <artifactId>maven-plugin-annotations</artifactId>
        <version>${mavenPluginPlugin.version}</version>
      </dependency>
      <dependency>
        <groupId>com.squareup</groupId>
        <artifactId>javapoet</artifactId>
        <version>1.7.0</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-simple</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.inject</groupId>
        <artifactId>javax.inject</artifactId>
        <version>1</version>
      </dependency>
      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven-model</artifactId>
        <version>${apache-maven.version}</version>
      </dependency>
      <dependency>
        <groupId>org.codehaus.plexus</groupId>
        <artifactId>plexus-utils</artifactId>
        <version>3.0.22</version>
      </dependency>
      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven-artifact</artifactId>
        <version>${apache-maven.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.eclipse.sisu</groupId>
        <artifactId>org.eclipse.sisu.plexus</artifactId>
        <version>${eclipse-sisu.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.codehaus.plexus</groupId>
        <artifactId>plexus-classworlds</artifactId>
        <version>${classworlds.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>io.takari</groupId>
        <artifactId>incrementalbuild-workspace</artifactId>
        <version>${incrementalbuild-workspace.version}</version>
      </dependency>
      <dependency>
        <groupId>io.takari.builder</groupId>
        <artifactId>takari-builder-security-manager</artifactId>
        <version>${takari-builder-security-manager.version}</version>
      </dependency>
      <dependency>
        <groupId>io.takari.builder</groupId>
        <artifactId>takari-builder</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.takari.builder</groupId>
        <artifactId>takari-builder-common</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.takari.builder</groupId>
        <artifactId>takari-builder-enforcer</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.takari.builder</groupId>
        <artifactId>takari-builder-apt</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
      <groupId>io.takari</groupId>
        <artifactId>incrementalbuild</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.maven.resolver</groupId>
        <artifactId>maven-resolver-api</artifactId>
        <version>1.1.0</version>
      </dependency>
      <dependency>
        <groupId>org.apache.maven.resolver</groupId>
        <artifactId>maven-resolver-util</artifactId>
        <version>1.1.0</version>
      </dependency>
      <dependency>
        <groupId>javax.enterprise</groupId>
        <artifactId>cdi-api</artifactId>
        <version>1.0</version>
      </dependency>
      <dependency>
        <groupId>com.google.inject</groupId>
        <artifactId>guice</artifactId>
        <version>4.0</version>
        <classifier>no_aop</classifier>
      </dependency>    

      <!-- test dependencies -->
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.takari.maven.plugins</groupId>
        <artifactId>takari-plugin-testing</artifactId>
        <version>${plugin-testing.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.takari.maven.plugins</groupId>
        <artifactId>takari-plugin-integration-testing</artifactId>
        <version>${plugin-testing.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven-compat</artifactId>
        <version>${apache-maven.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.google.collections</groupId>
        <artifactId>google-collections</artifactId>
        <version>1.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-core</artifactId>
        <version>1.3</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>3.5.2</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.google.testing.compile</groupId>
        <artifactId>compile-testing</artifactId>
        <version>0.10</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.google.truth</groupId>
        <artifactId>truth</artifactId>
        <version>0.30</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.takari.maven.plugins</groupId>
        <artifactId>takari-plugin-integration-testing</artifactId>
        <version>${plugin-testing.version}</version>
        <type>pom</type>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.maven.resolver</groupId>
        <artifactId>maven-resolver-connector-basic</artifactId>
        <version>${maven-resolver.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.maven.resolver</groupId>
        <artifactId>maven-resolver-transport-wagon</artifactId>
        <version>${maven-resolver.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-http</artifactId>
        <version>${maven-wagon.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-file</artifactId>
        <version>${maven-wagon.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-provider-api</artifactId>
        <version>${maven-wagon.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven-resolver-provider</artifactId>
        <version>3.5.2</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>animal-sniffer-maven-plugin</artifactId>
          <version>1.15</version>
          <configuration>
            <signature>
              <groupId>org.codehaus.mojo.signature</groupId>
              <artifactId>java18</artifactId>
              <version>1.0</version>
            </signature>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  
</project>